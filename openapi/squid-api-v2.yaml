openapi: 3.0.0
info:
  title: Squid Router API V2
  version: v2
  description: API for fetching cross-chain swap routes and checking transaction status using Squid.
servers:
  - url: https://v2.api.squidrouter.com
    description: Squid Production API V2
  - url: https://testnet.api.squidrouter.com
    description: Squid Testnet API V2

components:
  schemas:
    ChainType:
      type: string
      enum:
        - evm
        - cosmos
        - bitcoin
        - solana
      description: The type of blockchain.

    SquidCallType:
      type: integer
      description: |
        Type of call for hooks.
        0: DEFAULT (target contract call)
        1: FULL_TOKEN_BALANCE (use full balance of specified token for an input parameter)
        2: CALL_DATA / FULL_NATIVE_BALANCE (use `value` field as is for native token transfers or `payload` for substituting into callData)
        3: COLLECT_TOKEN_BALANCE
      enum: [0, 1, 2, 3]
      example: 1

    HookCallPayload:
      type: object
      properties:
        tokenAddress:
          type: string
          description: Address of the token whose balance will be used. For FULL_NATIVE_BALANCE, this might be a native token placeholder.
          example: "0xaf88d065e77c8cC2239327C5EDb3A432268e5831"
        inputPos:
          type: integer
          description: The 0-indexed position of the argument in the encoded function call data to be replaced by the token balance.
          example: 1

    EvmContractCall:
      type: object
      properties:
        chainType:
          $ref: '#/components/schemas/ChainType'
        callType:
          $ref: '#/components/schemas/SquidCallType'
        target:
          type: string
          description: The address of the contract to call.
          example: "0x794a61358D6845594F94dc1DB02A252b5b4814aD" # Aave Pool
        value:
          type: string
          description: Amount of native currency to send with the call, in wei.
          example: "0"
        callData:
          type: string
          description: The ABI-encoded calldata for the function call.
          example: "0x0a0a2b2e..."
        payload:
          $ref: '#/components/schemas/HookCallPayload'
        estimatedGas:
          type: string
          description: Estimated gas limit for this call.
          example: "50000"
      required:
        - chainType
        - callType
        - target
        - callData
        - estimatedGas

    Hook:
      type: object
      properties:
        chainType:
          $ref: '#/components/schemas/ChainType'
        fundAmount:
          type: string
          description: Amount of `fundToken` to be provided to the hook contract. (Required for preHooks that need funds).
          example: "10000000000000000"
        fundToken:
          type: string
          description: Address of the token to fund the hook contract with. (Required for preHooks that need funds).
          example: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
        calls:
          type: array
          items:
            $ref: '#/components/schemas/EvmContractCall'
        provider:
          type: string
          description: Name of your product or application triggering the hook.
          example: "My DeFi App"
        description:
          type: string
          description: A brief description of what the hook does.
          example: "Wrap native ETH before swapping"
        logoURI:
          type: string
          format: url
          description: URL to your product or application's logo.
          example: "https://example.com/logo.png"
      required:
        - chainType
        - calls

    RouteRequestParams:
      type: object
      properties:
        fromAddress:
          type: string
          description: The address of the sender.
          example: "0x..."
        fromChain:
          type: string # Chain ID
          description: The source chain ID.
          example: "56"
        fromToken:
          type: string # Token address
          description: The source token address.
          example: "0x55d398326f99059fF775485246999027B3197955"
        fromAmount:
          type: string
          description: The amount of `fromToken` to swap, in its smallest unit.
          example: "100000000000000000"
        toChain:
          type: string # Chain ID
          description: The destination chain ID.
          example: "42161"
        toToken:
          type: string # Token address
          description: The destination token address.
          example: "0xaf88d065e77c8cC2239327C5EDb3A432268e5831"
        toAddress:
          type: string
          description: The recipient address on the destination chain.
          example: "0x..."
        slippage:
          type: number
          format: float
          description: Slippage tolerance in percentage (e.g., 1 for 1%). Optional.
          example: 1
        quoteOnly:
          type: boolean
          description: If true, only a quote is returned without transaction data. Optional.
        preHook:
          $ref: '#/components/schemas/Hook'
          description: Optional pre-execution hook. If provided, must be a valid Hook object.
        postHook:
          $ref: '#/components/schemas/Hook'
          description: Optional post-execution hook. If provided, must be a valid Hook object.
        enableForecall:
          type: boolean
          description: Whether to enable forecall checks for the transaction. Optional.
        receiveGasOnDestination:
          type: boolean
          description: Whether to receive gas on the destination chain. Optional.
        bypassGuardrails:
          type: boolean
          description: Whether to bypass guardrails. Optional.
      required:
        - fromChain
        - fromToken
        - fromAmount
        - toChain
        - toToken

    FallbackAddress:
      type: object
      properties:
        coinType:
          type: integer
          description: The coin type identifier
        address:
          type: string
          description: The fallback address
      required:
        - coinType
        - address

    EvmTransactionRequestData:
      type: object
      properties:
        routeType:
          type: string
          enum: [CALL_BRIDGE_CALL, CALL_BRIDGE, BRIDGE_CALL, BRIDGE, EVM_ONLY, COSMOS_ONLY, SOLANA_ONLY, RFQ, FUND_AND_RUN_MULTICALL]
          example: "BRIDGE_CALL"
        target:
          type: string
          description: The target contract address for the transaction.
          example: "0xsquidRouterAddress"
        data:
          type: string
          description: The ABI-encoded calldata for the transaction.
          example: "0x..."
        value:
          type: string
          description: Amount of native currency to send with the transaction, in wei.
          example: "0"
        gasLimit:
          type: string
          description: Estimated gas limit for the transaction.
          example: "500000"
        gasPrice:
          type: string
          description: Recommended gas price for the transaction, in wei. (May not be present for EIP-1559 chains)
          example: "20000000000"
        maxFeePerGas:
          type: string
          description: (EIP-1559) Maximum fee per gas.
          example: "20000000000"
        maxPriorityFeePerGas:
          type: string
          description: (EIP-1559) Maximum priority fee per gas.
          example: "1500000000"
        requestId:
          type: string
          description: The unique request ID for this transaction.
        expiry:
          type: string
          description: Expiration timestamp for this transaction.
        expiryOffset:
          type: string
          description: Expiry offset duration.

    ChainflipSourceAsset:
      type: object
      properties:
        symbol:
          type: string
        chainName:
          type: string

    ChainflipDestinationAsset:
      type: object
      properties:
        symbol:
          type: string
        chainName:
          type: string

    ChainflipTransactionRequestData:
      type: object
      properties:
        routeType:
          type: string
          example: "CHAINFLIP_DEPOSIT_CHANNEL"
        depositChannelId:
          type: string
          description: The Chainflip deposit channel ID.
        fromAmount:
          type: string
          description: Amount to deposit.
        sourceAsset:
          $ref: '#/components/schemas/ChainflipSourceAsset'
        destinationAsset:
          $ref: '#/components/schemas/ChainflipDestinationAsset'
        destinationAddress:
          type: string

    FeeType:
      type: string
      enum:
        - AXELAR_FEE
        - GAS_RECEIVER_FEE
        - BOOST_FEE
        - INTEGRATOR_FEE
        - CHAINFLIP_FEE
        - EXECUTION_FEE
        - SETTLEMENT_FEE
        - SERVICE_FEE
      description: Type of fee applied to the transaction.

    GasCostType:
      type: string
      enum:
        - EXECUTE_CALL
      description: Type of gas cost.

    FeeCost:
      type: object
      properties:
        name:
          type: string
          example: "Squid Fee"
        description:
          type: string
          example: "Cross-chain fee for using Squid"
        percentage:
          type: string
          example: "0.001" # 0.1%
        gasLimit:
          type: string
          description: Gas limit for this fee, if applicable.
        gasMultiplier:
          type: number
          description: Gas multiplier for this fee, if applicable.
        token:
          $ref: '#/components/schemas/Token'
        amount:
          type: string
          example: "100000000000000"
        amountUsd:
          type: string
          example: "0.15"
        logoURI:
          type: string
          description: Logo URL for the fee provider.
      required:
        - name
        - token
        - amount
        - amountUsd

    GasCost:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GasCostType'
        token:
          $ref: '#/components/schemas/Token'
        gasLimit:
          type: string
          description: Gas limit for this cost.
        amount:
          type: string
          description: Amount of token for gas.
        amountUsd:
          type: string
          description: USD equivalent of gas cost.
      required:
        - type
        - token
        - gasLimit
        - amount
        - amountUsd

    ActionType:
      type: string
      enum: [SWAP, BRIDGE_CALL, FEE, RFQ, WRAP, BRIDGE, IBC_TRANSFER, CUSTOM]
      example: "SWAP"

    Action:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ActionType'
        fromChainId:
          type: string
        fromToken:
          $ref: '#/components/schemas/Token'
        fromAmount:
          type: string
        toChainId:
          type: string
        toToken:
          $ref: '#/components/schemas/Token'
        toAmount:
          type: string
        provider:
          type: string
          description: The DEX or bridge provider for this action.
          example: "Uniswap V3"
        description:
          type: string
          description: Description of the action.
        logoURI:
          type: string
          description: Logo URL for the provider.
        estimatedDuration:
          type: integer
          description: Estimated duration in milliseconds.
        exchangeRate:
          type: string
          description: Exchange rate for this action.
        priceImpact:
          type: string
          description: Price impact percentage.

    RouteResponseError:
      type: object
      properties:
        message:
          type: string
        path:
          type: string
        type:
          type: string

    RouteResponse:
      type: object
      properties:
        route:
          $ref: '#/components/schemas/RouteResponseData'
          nullable: true
        requestId:
          type: string
          description: ID for tracking and retrieving status updates
        integratorId:
          type: string
          description: The integrator ID used for the request
        error:
          $ref: '#/components/schemas/RouteResponseError'
          nullable: true
        errorType:
          type: string
          nullable: true

    RouteEstimate:
      type: object
      properties:
        fromAmount:
          type: string
        fromAmountUSD:
          type: string
        sendAmount:
          type: string
        toAmount:
          type: string
          description: Estimated amount of `toToken` to be received.
          example: "99500000"
        toAmountUSD:
          type: string
        toAmountMin:
          type: string
          description: Minimum amount to be received after slippage.
        toAmountMinUSD:
          type: string
          description: USD value of minimum amount.
        routeMillis:
          type: integer
        exchangeRate:
          type: string
          description: Exchange rate between fromToken and toToken.
        aggregatePriceImpact:
          type: string
          description: Aggregate price impact percentage.
        estimatedRouteDuration:
          type: integer
          description: Estimated duration in milliseconds.
        isBoostSupported:
          type: boolean
          description: Whether route supports boost.
        feeCosts:
          type: array
          items:
            $ref: '#/components/schemas/FeeCost'
            nullable: true
          nullable: true
        gasCosts:
          type: array
          items:
            $ref: '#/components/schemas/GasCost'
            nullable: true
          nullable: true
        isApprovalRequired:
          type: boolean
        approvalTx:
          type: object
          additionalProperties: true  # Allow any properties in this object
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
      required:
        - fromAmount
        - toAmount

    RouteResponseData:
      type: object
      properties:
        transactionRequest:
          oneOf:
            - $ref: '#/components/schemas/EvmTransactionRequestData'
            - $ref: '#/components/schemas/ChainflipTransactionRequestData'
        estimate:
          $ref: '#/components/schemas/RouteEstimate'
        params:
          $ref: '#/components/schemas/RouteRequestParams'

    ErrorType:
      type: string
      enum:
        - SCHEMA_VALIDATION_ERROR
        - PATH_FINDER_ERROR
        - QUOTE_ERROR
        - ROUTE_ERROR
        - BAD_REQUEST
        - UNKNOWN_ERROR
        - RATE_LIMIT
        - MAINTENANCE
        - UNAUTHORIZED
        - INTERNAL_ERROR
      description: Classification of error from Squid API.

    TransactionCallEventLog:
      type: string
      description: Call event log entry as string representation.

    TransactionChainData:
      type: object
      additionalProperties: true
      description: Chain-specific transaction data in key-value format.

    TransactionStatus:
      type: object
      properties:
        transactionId:
          type: string
        blockNumber:
          type: string
        callEventStatus:
          type: string
        callEventLog:
          type: array
          items:
            $ref: '#/components/schemas/TransactionCallEventLog'
        chainData:
          $ref: '#/components/schemas/TransactionChainData'
        transactionUrl:
          type: string
        destinationAddress:
          type: string

    RouteStatusEntry:
      type: object
      properties:
        chainId:
          type: string
        txHash:
          type: string
        status:
          type: string
          enum:
            - success
            - failure
            - not_found
            - unknown
            - awaiting
            - refunded
        action:
          type: string
          enum:
            - call
            - executed
            - ibc_transfer
            - send
            - vote
            - ibc_send
            - gas_paid
            - approved

    StatusResponseData:
      type: object
      properties:
        squidTransactionStatus:
          type: string
          enum:
            - success
            - needs_gas
            - ongoing
            - partial_success
            - an_error_has_occurred
            - not_found
            - failed_on_destination
            - refunded
          example: "success"
        id:
          type: string
          description: Transaction ID.
        status:
          type: string
          description: Transaction status.
        gasStatus:
          type: string
          description: Gas status of the transaction.
        isGMPTransaction:
          type: boolean
          description: Whether this is a GMP transaction.
        axelarTransactionUrl:
          type: string
          description: URL to view transaction on Axelar.
        fromChain:
          $ref: '#/components/schemas/TransactionStatus'
        toChain:
          $ref: '#/components/schemas/TransactionStatus'
        timeSpent:
          type: object
          additionalProperties:
            type: number
        routeStatus:
          type: array
          items:
            $ref: '#/components/schemas/RouteStatusEntry'
      required:
        - squidTransactionStatus

    BridgeType:
      type: string
      enum:
        - axelar-gmp
        - axelar-its
        - cctp
        - noble-cctp
        - ibc
        - chainflip
        - rfq
        - itb
      description: Type of bridge used for cross-chain operations.

    DepositAddressRequestData:
      $ref: '#/components/schemas/ChainflipTransactionRequestData'

    DepositAddressResponseData:
      type: object
      properties:
        depositAddress:
          type: string
          description: The address where the user should deposit their funds on the source chain.
          example: "bc1q..."
        amount:
          type: string
          description: The exact amount of source token to deposit.
          example: "70000"
        chainflipStatusTrackingId:
          type: string
          description: The ID to use for tracking the status of this Chainflip transaction.
          example: "channel-id-abc-123"
      required:
        - depositAddress

    ChainDataNativeCurrency:
      type: object
      properties:
        name:
          type: string
        symbol:
          type: string
        decimals:
          type: integer
        icon:
          type: string
          format: uri
          nullable: true

    ChainNativeContracts:
      type: object
      properties:
        wrappedNativeToken:
          type: string
        ensRegistry:
          type: string
        multicall:
          type: string
        usdcToken:
          type: string
      additionalProperties:
        type: string

    ComplianceData:
      type: object
      properties:
        trmIdentifier:
          type: string
      additionalProperties:
        type: string

    Maintenance:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      additionalProperties: false

    ChainData:
      type: object
      properties:
        chainName:
          type: string
        chainId:
          type: string
        chainType:
          type: string
          enum: [evm, cosmos, bitcoin, solana]
        rpc:
          type: string
          format: uri
          nullable: true
        chainIconURI:
          type: string
          format: uri
          nullable: true
        nativeCurrency:
          $ref: '#/components/schemas/ChainDataNativeCurrency'
        axelarChainName:
          type: string
          nullable: true
        networkIdentifier:
          type: string
          description: Network identifier.
        squidImplementation:
          type: string
          enum: [squidrouter, squidflow, tpflistener]
          nullable: true
        estimatedRouteDuration:
          type: integer
          nullable: true
        estimatedExpressRouteDuration:
          type: integer
          nullable: true
        swapAmountForGas:
          type: string
          nullable: true
        blockExplorerUrls:
          type: array
          items:
            type: string
          nullable: true
        gasMultiplier:
          type: number
          format: float
          nullable: true
        chainNativeContracts:
          $ref: '#/components/schemas/ChainNativeContracts'
          nullable: true
        supportedCrossChainProtocols:
          type: array
          items:
            type: string
          nullable: true
        compliance:
          $ref: '#/components/schemas/ComplianceData'
          nullable: true
        maintenances:
          type: array
          items:
            $ref: '#/components/schemas/Maintenance'
          nullable: true
        boostSupported:
          type: boolean
          nullable: true
        sameChainSwapsSupported:
          type: boolean
          description: Whether same-chain swaps are supported.

    Volatility:
      type: integer
      enum: [0, 1, 2, 3]
      description: |
        Token volatility classification:
        0: SUPER_STABLE
        1: STABLE
        2: HIGH_CAP
        3: VOLATILE

    AxelarNetworkIdentifier:
      type: object
      additionalProperties:
        type: string
      description: Axelar network identifiers for the token.

    Token:
      type: object
      properties:
        chainId:
          type: string
          example: "1"
        address:
          type: string
          example: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
        name:
          type: string
          example: "USD Coin"
        symbol:
          type: string
          example: "USDC"
        decimals:
          type: integer
          example: 6
        logoURI:
          type: string
          format: url
          example: "https://..."
          nullable: true
        coingeckoId:
          type: string
          example: "usd-coin"
          nullable: true
        usdPrice:
          type: number
          format: float
          description: Current USD price of the token.
          example: 1.00
          nullable: true
        categories:
          type: array
          items:
            type: string
          nullable: true
        ibcDenom:
          type: string
          nullable: true
        bridgeOnly:
          type: boolean
          nullable: true
        axelarNetworkIdentifier:
          $ref: '#/components/schemas/AxelarNetworkIdentifier'
          nullable: true
        volatility:
          $ref: '#/components/schemas/Volatility'
        axelarNetworkSymbol:
          type: string
          nullable: true
        interchainTokenId:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ChainType'
        feeOnTransfer:
          type: boolean
          nullable: true
        isLpToken:
          type: boolean
          nullable: true
        disabled:
          type: boolean
          nullable: true
        originalAddress:
          type: string
          nullable: true

    FeatureFlag:
      type: object
      properties:
        feature:
          type: string
        allowedIntegrators:
          type: array
          items:
            type: string
        enabled:
          type: boolean

    SDKInfoResponseData:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/Token'
          nullable: true
        chains:
          type: array
          items:
            $ref: '#/components/schemas/ChainData'
          nullable: true
        axelarscanURL:
          type: string
          nullable: true
        isInMaintenanceMode:
          type: boolean
          nullable: true
        maintenanceMessage:
          type: string
          nullable: true
        featureFlags:
          type: array
          items:
            $ref: '#/components/schemas/FeatureFlag'
          nullable: true

    ApiErrorDetails:
      type: object
      properties:
        message:
          type: string
          description: Specific error message.
        path:
          type: array
          items:
            type: string
          description: Path to the field that caused the error.
        code:
          type: string
          description: Error code.
      additionalProperties:
        type: string

    ApiBasicResponseError:
      type: object
      properties:
        errorType:
          $ref: '#/components/schemas/ErrorType'
          description: A high-level classification of the error.
          example: "ValidationError"
        message:
          type: string
          description: A general human-readable message describing the error.
          nullable: true
          example: "Input validation failed."
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiErrorDetails'
          nullable: true
          description: A list of specific validation errors.
        reason:
          type: string
          description: Reason for the error.
          nullable: true

  parameters:
    IntegratorIdHeader:
      name: x-integrator-id
      in: header
      required: true
      schema:
        type: string
      description: Your Squid integrator ID.
      example: "your-integrator-id"
    TransactionIdParam:
      name: transactionId
      in: query
      required: true
      schema:
        type: string
      description: The transaction hash (or Chainflip ID for Chainflip routes) to check the status for.
    RequestIdParam:
      name: requestId
      in: query
      required: true
      schema:
        type: string
      description: The request ID received from the /route endpoint.
    FromChainIdParam:
      name: fromChainId
      in: query
      required: true
      schema:
        type: string
      description: The source chain ID of the transaction.
    ToChainIdParam:
      name: toChainId
      in: query
      required: true
      schema:
        type: string
      description: The destination chain ID of the transaction.
    BridgeTypeParam:
      name: bridgeType
      in: query
      required: false
      schema:
        type: string
        enum: [chainflip, chainflipmultihop]
      description: Specifies the bridge type if applicable (e.g., for Chainflip).

  responses:
    ApiBasicResponseError:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiBasicResponseError'
    RouteResponse:
      description: Successful route calculation.
      headers:
        x-request-id:
          description: A unique identifier for this request, can be used for status checking.
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              route:
                $ref: '#/components/schemas/RouteResponseData'
    StatusResponse:
      description: Transaction status.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusResponseData'
    DepositAddressResponse:
      description: Deposit address information for non-EVM to EVM swaps.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepositAddressResponseData'
    SDKInfoResponse:
      description: SDK Information, including token list.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SDKInfoResponseData'

paths:
  /v2/route:
    post:
      operationId: getRoute
      summary: Get a cross-chain swap route
      parameters:
        - $ref: '#/components/parameters/IntegratorIdHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteRequestParams'
      responses:
        '200':
          description: Successful route calculation.
          headers:
            x-request-id:
              description: A unique identifier for this request, required for status checks.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteResponse'
        default:
          $ref: '#/components/responses/ApiBasicResponseError'

  /v2/status:
    get:
      operationId: getStatus
      summary: Get the status of a transaction
      parameters:
        - $ref: '#/components/parameters/IntegratorIdHeader'
        - name: transactionId
          in: query
          required: true
          schema:
            type: string
          description: The transaction hash to check the status for.
        - name: requestId
          in: query
          required: true
          schema:
            type: string
          description: The request ID received from the /route endpoint.
        - name: fromChainId
          in: query
          required: true
          schema:
            type: string
          description: The source chain ID of the transaction.
        - name: toChainId
          in: query
          required: true
          schema:
            type: string
          description: The destination chain ID of the transaction.
        - name: bridgeType
          in: query
          required: false
          schema:
            type: string
          description: Specifies the bridge type if applicable.
      responses:
        '200':
          $ref: '#/components/responses/StatusResponse'
        default:
          $ref: '#/components/responses/ApiBasicResponseError'

  /v2/sdk-info:
    get:
      operationId: getSDKInfo
      summary: Get SDK information, including supported tokens and chains
      parameters:
        - $ref: '#/components/parameters/IntegratorIdHeader'
      responses:
        '200':
          $ref: '#/components/responses/SDKInfoResponse'
        default:
          $ref: '#/components/responses/ApiBasicResponseError'

  /v2/deposit-address:
    post:
      operationId: v2DepositAddressPost
      summary: Get deposit address for non-EVM to EVM swaps
      parameters:
        - $ref: '#/components/parameters/IntegratorIdHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAddressRequestData'
      responses:
        '200':
          $ref: '#/components/responses/DepositAddressResponse'
        default:
          $ref: '#/components/responses/ApiBasicResponseError'
